


ARM Macro Assembler    Page 1 


    1 00000000         ;/* PROGRAM TO FIND SMALLEST NUMBER IN AN ARRAY & STORE 
                       IN INTERNAL RAM    */
    2 00000000         ;/* ARRAY OF 7 NUMBERS 0X44444444 ,0X22222222,0X11111111
                       ,0X22222222,0XAAAAAAAA  */  
    3 00000000         ;/*       0X88888888 ,0X99999999         */
    4 00000000         ;/* RESULT CAN BE VIEWED IN LOCATION 0X40000000 & ALSO I
                       N R2      */
    5 00000000         ;/* SET A BREAKPOINT AT NOP INSTRUCTION,RUN THE PROGRAM 
                       & CHECK THE RESULT    */ 
    6 00000000         ;/* PROGRAM WRITTEN BY ALS R&D TEAM BENGALURU DATE:08/08
                       /2011      */ 
    7 00000000         
    8 00000000                 AREA             SMALLEST , CODE, READONLY
    9 00000000         
   10 00000000         ENTRY                                ;Mark first instruc
                                                            tion to execute
   11 00000000         
   12 00000000         START
   13 00000000 E3A05006        MOV              R5,#6       ; INTIALISE COUNTER
                                                             TO 6(i.e. N=7)
   14 00000004 E59F104C        LDR              R1,=VALUE1  ; LOADS THE ADDRESS
                                                             OF FIRST VALUE
   15 00000008 E4912004        LDR              R2,[R1],#4  ; WORD ALIGN T0 ARR
                                                            AY ELEMENT 
   16 0000000C         LOOP
   17 0000000C E4914004        LDR              R4,[R1],#4  ; WORD ALIGN T0 ARR
                                                            AY ELEMENT 
   18 00000010 E1520004        CMP              R2,R4       ; COMPARE NUMBERS
   19 00000014 9A000000        BLS              LOOP1       ; IF THE FIRST NUMB
                                                            ER IS < THEN GOTO L
                                                            OOP1
   20 00000018         
   21 00000018 E1A02004        MOV              R2,R4       ; IF THE FIRST NUMB
                                                            ER IS > THEN MOV CO
                                                            NTENT R4 TO R2
   22 0000001C         LOOP1
   23 0000001C E2555001        SUBS             R5,R5,#1    ; DECREMENT COUNTER
                                                            
   24 00000020 E3550000        CMP              R5,#0       ; COMPARE COUNTER T
                                                            O 0
   25 00000024 1AFFFFF8        BNE              LOOP        ; LOOP BACK TILL AR
                                                            RAY ENDS
   26 00000028         
   27 00000028 E59F402C        LDR              R4,=RESULT  ; LOADS THE ADDRESS
                                                             OF RESULT 
   28 0000002C E5842000        STR              R2,[R4]     ; STORES THE RESULT
                                                             IN R1
   29 00000030         
   30 00000030 E1A00000        NOP
   31 00000034 E1A00000        NOP
   32 00000038 E1A00000        NOP
   33 0000003C         
   34 0000003C         
   35 0000003C         ; ARRAY OF 32 BIT NUMBERS(N=7)
   36 0000003C         
   37 0000003C         VALUE1
   38 0000003C 44444444        DCD              0X44444444  ;
   39 00000040 22222222        DCD              0X22222222  ;
   40 00000044 11111111        DCD              0X11111111  ;



ARM Macro Assembler    Page 2 


   41 00000048 22222222        DCD              0X22222222  ;     
   42 0000004C AAAAAAAA        DCD              0XAAAAAAAA  ;
   43 00000050 88888888        DCD              0X88888888  ;       
   44 00000054 99999999        DCD              0X99999999  ;
   45 00000058         
   46 00000058         
   47 00000058         
   48 00000058 00000000 
              00000000         AREA             DATA2,DATA,READWRITE ; TO STORE
                                                             RESULT IN GIVEN AD
                                                            DRESS   
   49 00000000 00000000 
                       RESULT  DCD              0X0
   50 00000004         
   51 00000004                 END                          ; Mark end of file
Command Line: --debug --xref --apcs=interwork --depend=SMAL_LARG.d -oSMAL_LARG.
o -IC:\Keil4\ARM\CMSIS\Include -IC:\Keil4\ARM\INC\Philips --predefine="__EVAL S
ETA 1" --list=SMAL_LARG.lst SMAL_LARG.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ENTRY 00000000

Symbol: ENTRY
   Definitions
      At line 10 in file SMAL_LARG.s
   Uses
      None
Comment: ENTRY unused
LOOP 0000000C

Symbol: LOOP
   Definitions
      At line 16 in file SMAL_LARG.s
   Uses
      At line 25 in file SMAL_LARG.s
Comment: LOOP used once
LOOP1 0000001C

Symbol: LOOP1
   Definitions
      At line 22 in file SMAL_LARG.s
   Uses
      At line 19 in file SMAL_LARG.s
Comment: LOOP1 used once
SMALLEST 00000000

Symbol: SMALLEST
   Definitions
      At line 8 in file SMAL_LARG.s
   Uses
      None
Comment: SMALLEST unused
START 00000000

Symbol: START
   Definitions
      At line 12 in file SMAL_LARG.s
   Uses
      None
Comment: START unused
VALUE1 0000003C

Symbol: VALUE1
   Definitions
      At line 37 in file SMAL_LARG.s
   Uses
      At line 14 in file SMAL_LARG.s
Comment: VALUE1 used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA2 00000000

Symbol: DATA2
   Definitions
      At line 48 in file SMAL_LARG.s
   Uses
      None
Comment: DATA2 unused
RESULT 00000000

Symbol: RESULT
   Definitions
      At line 49 in file SMAL_LARG.s
   Uses
      At line 27 in file SMAL_LARG.s
Comment: RESULT used once
2 symbols
334 symbols in table
